#!/bin/sh -
#
# Copyright (c) 1990 The Regents of the University of California.
# All rights reserved.
#
# Written and contributed by W. Jolitz 12/90
#
# Redistribution and use in source and binary forms are permitted provided
# that: (1) source distributions retain this entire copyright notice and
# comment, and (2) distributions including binaries display the following
# acknowledgement:  ``This product includes software developed by the
# University of California, Berkeley and its contributors'' in the
# documentation or other materials provided with the distribution and in
# all advertising materials mentioning features or use of this software.
# Neither the name of the University nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#	@(#)MAKEDEV	5.2 (Berkeley) 6/22/90
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, standard number of units (or close)
#	std	standard devices
#	local	configuration specific devices
#
# Tapes:
#	wt*	QIC-interfaced (e.g. not SCSI) 3M cartridge tape
#	st*	"NEW type scsi tapes" (old driver uses the
#		block devices of the disks to get access)
#
# Disks:
#	wd*	"winchester" disk drives (ST506,IDE,ESDI,RLL,...)
#	fd*	"floppy" disk drives (3 1/2", 5 1/4")
#	as*	"SCSI" disk/tape/CDROM drives
#	sd*	"NEW type scsi disks"
#
# Console ports:
#	vga	stock pccons vga (note it has no keyboard name or minor!)
#	vgaco	codrv vga
#	kbdco	codrv kbd
# 
# Terminal ports:
#	com*	standard PC COM ports
#	tty*	alias for PC COM ports, this is what the system really wants
#
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
#
# Printers:
#	lpt*	stock lp
#	lpa*	interruptless lp
#
# Call units:
#
# Special purpose devices:
#	bpf*	packet filter
#	speaker	pc speaker
#	dcf*	dcf clock
#
# PATCHES MAGIC                LEVEL   PATCH THAT GOT US HERE
# --------------------         -----   ----------------------
# CURRENT PATCH LEVEL:         2       00135
# --------------------         -----   ----------------------
#
# 16 Feb 93	Julian Elischer		ADDED for SCSI system
# 16 Feb 93	Julian Elischer		media changer device
# 10 Mar 93	Rodney W. Grimes	general clean up of above patches
#					typo in rm of kmem (was kmdem)
#					major number for /dev/fd/* and /dev/std*
#					added lpt, lpa, bpf, vga, vgaco, kbdco
# 08 Apr 93	Rodney W. Grimes	Cleanup chgrp, chown and chmod stuff
#					Added duplicate name tty=com,
#					added speaker, dcf
#

PATH=/sbin:/bin/:/usr/bin
umask 77
for i
do
case $i in

all)
	sh MAKEDEV std wt0 fd0 fd1 wd0 wd1 as0 as1 sd0 sd1 tty0 tty1 pty0 st0
	sh MAKEDEV ch0 cd0 lpt0 lpt1 lpt2 lpa0 lpa1 lpa2 speaker
	;;
std)
	rm -f console drum mem kmem null tty klog stdin stdout stderr
	mknod console	c 0 0;	chmod 600 console;	chown root.wheel console
	mknod drum	c 4 0;	chmod 640 drum;		chown root.kmem drum
	mknod kmem	c 2 1;	chmod 640 kmem;		chown root.kmem kmem
	mknod mem	c 2 0;	chmod 640 mem;		chown root.kmem mem
	mknod null	c 2 2;	chmod 666 null;		chown root.wheel null
	mknod tty	c 1 0;	chmod 666 tty;		chown root.wheel tty
	mknod klog	c 7 0;	chmod 600 klog;		chown root.wheel klog
	mknod stdin	c 22 0; chmod 666 stdin;	chown root.wheel stdin
	mknod stdout	c 22 1; chmod 666 stdout;	chown root.wheel stdout
	mknod stderr	c 22 2; chmod 666 stderr;	chown root.wheel stderr
	rm -f fd/*
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
	 		printf("mknod %d c 22 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
	;;

wt*)
	umask 2;
	rm -f wt0 rwt0
	mknod wt0 	b 3 0;	chown root.operator wt0
	mknod rwt0	c 10 0;	chown root.operator rwt0
	umask 77;
	;;

as*|fd*|sd*|wd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	as*) name=as; blk=4; chr=13;;
	fd*) name=fd; blk=2; chr=9;;
	sd*) name=sd; blk=4; chr=13;;
	wd*) name=wd; blk=0; chr=3;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

com*|tty*)
	unit=`expr $i : '...\(.*\)'`
	rm -f com0$unit tty0$unit
	mknod com$unit c 8 $unit
	mknod tty0$unit c 8 $unit
	chown uucp.wheel com0$unit tty0$unit
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
	4) offset=64 name=t;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("rm -f tty%s%x; mknod tty%s%x c 5 %d; \
					rm -f pty%s%x; mknod pty%s%x c 6 %d; ", \
					n, i, n, i, b+i, n, i, n, i, b+i); }'`
		umask 77
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
		;;
	esac
	;;

st*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	st*) name=st;  chr=14; blk=5;;
	esac
	rm -f $name$unit n$name$unit e$name$unit en$name$unit \
		r$name$unit nr$name$unit er$name$unit enr$name$unit 
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	b $blk `expr $unit '*' 16 + 0`
		mknod n${name}${unit}	b $blk `expr $unit '*' 16 + 1`
		mknod e${name}${unit}	b $blk `expr $unit '*' 16 + 2`
		mknod en${name}${unit}	b $blk `expr $unit '*' 16 + 3`
		mknod r${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		mknod nr${name}${unit}	c $chr `expr $unit '*' 16 + 1`
		mknod er${name}${unit}	c $chr `expr $unit '*' 16 + 2`
		mknod enr${name}${unit}	c $chr `expr $unit '*' 16 + 3`
		chgrp operator ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		chmod 640 ${name}${unit} n${name}${unit} \
			e$name$unit en$name$unit \
			r${name}${unit} nr${name}${unit} \
			er${name}${unit} enr${name}${unit} 
		;;
	*)
		echo bad unit for tape in: $i
		;;
	esac
	umask 77
	;;

ch*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	ch*) name=ch;  chr=17;;
	esac
	rm -f $name$unit
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}	c $chr `expr $unit '*' 16 + 0`
		chgrp operator ${name}${unit}
		chmod 640 ${name}${unit}
		;;
	*)
		echo bad unit for media changer in: $i
		;;
	esac
	umask 77
	;;

cd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cd*) name=cd; blk=6; chr=15;;
	esac
	rm -f $name$unit? r$name$unit?
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

lpt*)
	unit=`expr $i : 'lpt\(.*\)'`
	rm -f lpt$unit
	mknod lpt$unit c 16 $unit
	chown root.wheel lpt$unit
	;;

# Note: the stock pccons driver does not have a minor for the keyboard
vga|vgaco|kbdco)
	chr=21
	device=`expr ${i} : '\(.*\)co'`
	case ${i} in
	vga) name=vga; chr=12; minor=0;;
	kbdco) name=kbdco; chr=21; minor=0;;
	vgaco) name=vgaco; chr=21; minor=128;;
	esac
	rm -f ${name}
	mknod ${name} c ${chr} ${minor}
	chown root.wheel $name
	;;

bpf*)
	unit=`expr $i : 'bpf\(.*\)'`
	rm -f bpf$unit
	mknod bpf$unit c 23 $unit
	chown root.wheel bpf$unit
	;;

dcf*)
	unit=`expr $i : 'dcf\(.*\)'`
	rm -f dcf$unit
	mknod dcf$unit c 24 $unit
	chown root.wheel dcf$unit
	;;

lpa*)
	unit=`expr $i : 'lpa\(.*\)'`
	chr=25
	rm -f lpa$unit lpa${unit}p
	mknod lpa${unit}	c $chr `expr $unit + 0`
	mknod lpa${unit}p	c $chr `expr $unit + 32`
	chown root.wheel lpa${unit} lpa${unit}p
	;;

speaker)
	rm -f speaker
	mknod speaker c 26 0
	chown root.wheel speaker
	;;

local)
	umask 0
	sh MAKEDEV.local
	;;

esac
done
